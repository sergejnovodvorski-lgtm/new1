import streamlit as st
import gspread
import pandas as pd
import json
from datetime import datetime
import time

# =========================================================
# 1. –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò
# =========================================================

# --- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–°–ü–†–ê–í–ò–¢–¨! ---
# 1. –¢–û–ß–ù–û–ï –ò–ú–Ø –í–ê–®–ï–ô –¢–ê–ë–õ–ò–¶–´ –í GOOGLE DRIVE
SPREADSHEET_NAME = "Start" 
# 2. –ù–ê–ó–í–ê–ù–ò–ï –õ–ò–°–¢–ê –î–õ–Ø –ó–ê–ü–ò–°–ò –ó–ê–Ø–í–û–ö
WORKSHEET_NAME_ORDERS = "–ó–ê–Ø–í–ö–ò"
# ------------------------------

st.set_page_config(
    page_title="CRM: –í–≤–æ–¥ –ù–æ–≤–æ–π –ó–∞—è–≤–∫–∏", 
    layout="wide",
    initial_sidebar_state="expanded"
)

# =========================================================
# 2. –§–£–ù–ö–¶–ò–ò –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø
# =========================================================

@st.cache_resource(ttl=3600)
def get_gsheet_client():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Google Sheets API —á–µ—Ä–µ–∑ –°–µ—Ä–≤–∏—Å–Ω—ã–π –ê–∫–∫–∞—É–Ω—Ç."""
    try:
        secrets = json.load(open("secrets.json"))
    except FileNotFoundError:
        st.error("–û—à–∏–±–∫–∞: –§–∞–π–ª secrets.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –ª–µ–∂–∏—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞.")
        return None
        
    try:
        gc = gspread.service_account_from_dict(secrets)
        return gc
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ gspread. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ JSON-–∫–ª—é—á: {e}")
        return None

@st.cache_data(ttl="1h")
def load_price_list():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ª–∏—Å—Ç '–ü–†–ê–ô–°' –≤ DataFrame pandas."""
    gc = get_gsheet_client()
    if not gc: return pd.DataFrame()
        
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        worksheet = sh.worksheet("–ü–†–ê–ô–°") 
        data = worksheet.get_all_records()
        df = pd.DataFrame(data)
        
        if '–¶–ï–ù–ê' in df.columns:
            df['–¶–ï–ù–ê'] = pd.to_numeric(df['–¶–ï–ù–ê'], errors='coerce')
        
        return df
    
    except gspread.exceptions.SpreadsheetNotFound:
        st.error(f"–û—à–∏–±–∫–∞: Google –¢–∞–±–ª–∏—Ü–∞ —Å –∏–º–µ–Ω–µ–º '{SPREADSHEET_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
        return pd.DataFrame()
    except gspread.exceptions.WorksheetNotFound:
        st.error("–û—à–∏–±–∫–∞: –õ–∏—Å—Ç '–ü–†–ê–ô–°' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è.")
        return pd.DataFrame()
    except Exception as e:
        # –ò–°–ü–†–ê–í–õ–ï–ù–ê F-—Å—Ç—Ä–æ–∫–∞
        st.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∞–π—Å–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï –∏ –¶–ï–ù–ê). –û—à–∏–±–∫–∞: {e}")
        return pd.DataFrame()

@st.cache_resource
def get_orders_worksheet():
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–æ–∫."""
    gc = get_gsheet_client()
    if not gc: return None
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        return sh.worksheet(WORKSHEET_NAME_ORDERS)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '{WORKSHEET_NAME_ORDERS}'. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞! –û—à–∏–±–∫–∞: {e}")
        return None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
price_df = load_price_list()
if price_df.empty and SPREADSHEET_NAME != "CRM/–ó–ê–Ø–í–ö–ò + –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†":
    st.stop() 

orders_ws = get_orders_worksheet()
if not orders_ws and WORKSHEET_NAME_ORDERS != "–ó–ê–Ø–í–ö–ò":
    st.stop() 

price_items = ["--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---"] + price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'].tolist()

if 'calculator_items' not in st.session_state:
    st.session_state.calculator_items = []
    
# =========================================================
# 3. –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–ò–°–ò –î–ê–ù–ù–´–• –í GOOGLE SHEETS
# =========================================================

def save_data_to_gsheets(data_row):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç –ó–ê–Ø–í–ö–ò."""
    if orders_ws is None:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–∏—Å—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö.")
        return False
        
    try:
        orders_ws.append_row(data_row)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        return False

# =========================================================
# 4. –§–û–†–ú–ê –í–í–û–î–ê (50-60 –†–ï–ö–í–ò–ó–ò–¢–û–í)
# =========================================================

st.title("–°–∏—Å—Ç–µ–º–∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ó–∞—è–≤–∫–∞–º–∏")
st.markdown("---")

# --- –§–û–†–ú–ê 1: –°–±–æ—Ä 50-60 —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º st.form, —á—Ç–æ–±—ã –≤—Å–µ –ø–æ–ª—è –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –≤–º–µ—Å—Ç–µ
with st.form(key='data_form'):

    # 4.1. –†–∞–∑–¥–µ–ª: –û—Å–Ω–æ–≤–Ω–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ö–ª–∏–µ–Ω—Ç–µ
    st.header("1. –û—Å–Ω–æ–≤–Ω—ã–µ –î–∞–Ω–Ω—ã–µ")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        client_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ö–æ–º–ø–∞–Ω–∏–∏", key="k_client_name")
        contact_person = st.text_input("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –õ–∏—Ü–æ", key="k_contact_person")
        source = st.selectbox("–ò—Å—Ç–æ—á–Ω–∏–∫ –ó–∞—è–≤–∫–∏", ["–°–∞–π—Ç", "–ó–≤–æ–Ω–æ–∫", "–ü–∞—Ä—Ç–Ω–µ—Ä", "–ü—Ä–æ—á–µ–µ"], key="k_source")

    with col2:
        client_email = st.text_input("Email", key="k_client_email")
        client_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", key="k_client_phone")
        status = st.selectbox("–°—Ç–∞—Ç—É—Å –ó–∞—è–≤–∫–∏", ["–ù–æ–≤–∞—è", "–í —Ä–∞–±–æ—Ç–µ", "–ó–∞–∫—Ä—ã—Ç–∞"], key="k_status")

    with col3:
        city = st.text_input("–ì–æ—Ä–æ–¥/–†–µ–≥–∏–æ–Ω", key="k_city")
        date_created = st.date_input("–î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏—è –ó–∞—è–≤–∫–∏", key="k_date_created")
        priority = st.slider("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", 1, 5, 3, key="k_priority")

    st.markdown("---")

    # 4.2. –†–∞–∑–¥–µ–ª: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –†–µ–∫–≤–∏–∑–∏—Ç—ã (–†–∞–∑–±–∏–≤–∫–∞ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º –¥–ª—è 50+ –ø–æ–ª–µ–π)
    tab_tech_1, tab_tech_2 = st.tabs(["2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è (I)", "3. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è (II)"])

    tech_fields = {} # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–±–æ—Ä–∞ –≤—Å–µ—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤

    with tab_tech_1:
        st.subheader("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –î–µ—Ç–∞–ª–∏ (–ü–æ–ª—è 1-25)")
        
        # 25 –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        for i in range(1, 26):
            # –í–Ω–∏–º–∞–Ω–∏–µ: –∑–¥–µ—Å—å –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–æ–≤–∞—Ä—å, –∞ –Ω–µ –≤ st.session_state –Ω–∞–ø—Ä—è–º—É—é
            tech_fields[f'–†–µ–∫–≤–∏–∑–∏—Ç_{i}'] = st.text_input(f"–†–µ–∫–≤–∏–∑–∏—Ç –ø—Ä–æ–µ–∫—Ç–∞ ‚Ññ{i}", key=f"k_req_{i}")

    with tab_tech_2:
        st.subheader("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è (–ü–æ–ª—è 26-50)")
        
        # –ï—â–µ 25 –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        for i in range(26, 51):
            tech_fields[f'–†–µ–∫–≤–∏–∑–∏—Ç_{i}'] = st.text_input(f"–†–µ–∫–≤–∏–∑–∏—Ç –ø—Ä–æ–µ–∫—Ç–∞ ‚Ññ{i}", key=f"k_req_{i}")

    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã 1 (–ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–º—è—Ç–∏ Streamlit)
    st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", type="primary")

# –ö–û–ù–ï–¶ –§–û–†–ú–´ 1

# =========================================================
# 5. –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† (–í–ù–ï –§–û–†–ú)
# =========================================================
st.markdown("---")
st.header("4. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –°—Ç–æ–∏–º–æ—Å—Ç–∏ –ó–∞—è–≤–∫–∏")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä (st.button - —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!)
add_item = st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –≤ —Ä–∞—Å—á–µ—Ç")
if add_item:
    st.session_state.calculator_items.append({"item": price_items[0], "qty": 1})
    st.rerun()

total_cost = 0

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∏ —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã
for i, item_data in enumerate(st.session_state.calculator_items):
    
    col_item, col_qty, col_price, col_remove = st.columns([4, 1, 1, 0.5])

    with col_item:
        selected_item = st.selectbox(
            f"–ü–æ–∑–∏—Ü–∏—è {i}", 
            price_items, 
            index=price_items.index(item_data["item"]),
            key=f"item_{i}",
            label_visibility="collapsed"
        )
        st.session_state.calculator_items[i]["item"] = selected_item

    with col_qty:
        quantity = st.number_input(
            f"–ö–æ–ª-–≤–æ {i}", 
            min_value=1, 
            value=item_data["qty"], 
            step=1,
            key=f"qty_{i}",
            label_visibility="collapsed"
        )
        st.session_state.calculator_items[i]["qty"] = int(quantity)
        
    cost = 0
    if selected_item != price_items[0] and not price_df.empty:
        price_row = price_df[price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'] == selected_item]
        if not price_row.empty:
            price = price_row['–¶–ï–ù–ê'].iloc[0]
            cost = price * int(quantity)
            total_cost += cost
    
    with col_price:
        st.metric(f"–°—Ç–æ–∏–º–æ—Å—Ç—å {i}", f"{cost:,.0f} ‚ÇΩ", label_visibility="collapsed")
        
    with col_remove:
        st.text("") # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
        if st.button("üóëÔ∏è", key=f"remove_{i}"):
            st.session_state.calculator_items.pop(i)
            st.rerun() 

st.markdown("---")
st.subheader(f"–ò–¢–û–ì–û: {total_cost:,.0f} ‚ÇΩ")

# =========================================================
# 6. –ö–ù–û–ü–ö–ê –û–¢–ü–†–ê–í–ö–ò (–§–û–†–ú–ê 2)
# =========================================================
st.markdown("---")

# --- –§–û–†–ú–ê 2: –¢–æ–ª—å–∫–æ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets ---
with st.form(key='submit_form'):
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã 2
    submitted = st.form_submit_button("‚úÖ –°–û–•–†–ê–ù–ò–¢–¨ –ó–ê–Ø–í–ö–£ –í –¢–ê–ë–õ–ò–¶–£", use_container_width=True)

    if submitted:
        
        # 6.1. –°–±–æ—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ session_state (–≤–≤–µ–¥–µ–Ω–Ω—ã–µ 50-60 –ø–æ–ª–µ–π)
        # –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ—Ä—É—Ç—Å—è –∏–∑ –∫–ª—é—á–µ–π 'k_' –≤ session_state, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤ –§–æ—Ä–º–µ 1
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if not st.session_state.k_client_name or not st.session_state.k_client_phone:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è '–ù–∞–∑–≤–∞–Ω–∏–µ –ö–æ–º–ø–∞–Ω–∏–∏' –∏ '–¢–µ–ª–µ—Ñ–æ–Ω' –≤ —Ä–∞–∑–¥–µ–ª–µ 1.")
        else:
            # –°–±–æ—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏
            all_data = [
                datetime.now().strftime("%Y-%m-%d %H:%M:%S"), # 1. –î–∞—Ç–∞/–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏
                st.session_state.k_client_name,               # 2. –ù–∞–∑–≤–∞–Ω–∏–µ –ö–æ–º–ø–∞–Ω–∏–∏
                st.session_state.k_contact_person,            # 3. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –õ–∏—Ü–æ
                st.session_state.k_client_email,              # 4. Email
                st.session_state.k_client_phone,              # 5. –¢–µ–ª–µ—Ñ–æ–Ω
                st.session_state.k_city,                      # 6. –ì–æ—Ä–æ–¥/–†–µ–≥–∏–æ–Ω
                st.session_state.k_date_created.strftime("%Y-%m-%d"), # 7. –î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏—è
                st.session_state.k_source,                    # 8. –ò—Å—Ç–æ—á–Ω–∏–∫
                st.session_state.k_status,                    # 9. –°—Ç–∞—Ç—É—Å
                st.session_state.k_priority,                  # 10. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                # 11-60. –î–æ–±–∞–≤–ª—è–µ–º 50 —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
                *[st.session_state[f'k_req_{i}'] for i in range(1, 51)],
                # 61. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
                total_cost 
            ]
            
            # 6.2. –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
            if save_data_to_gsheets(all_data):
                st.success("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Google –¢–∞–±–ª–∏—Ü–µ!")
                # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
                st.session_state.calculator_items = []
                time.sleep(1) 
                st.rerun() # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ–æ—Ä–º—ã –¥–ª—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
            else:
                st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '–ó–ê–Ø–í–ö–ò'.")

