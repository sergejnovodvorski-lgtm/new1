import streamlit as st
import gspread
import pandas as pd
import re
from datetime import datetime, timedelta
import urllib.parse
import time
from typing import List, Dict, Any


# =========================================================
# 1. –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò
# =========================================================


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
SPREADSHEET_NAME = "Start" 
WORKSHEET_NAME_ORDERS = "–ó–ê–Ø–í–ö–ò"
WORKSHEET_NAME_PRICE = "–ü–†–ê–ô–°"


# –ó–∞–≥–æ–ª–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ –ª–∏—Å—Ç–µ '–ó–ê–Ø–í–ö–ò'
EXPECTED_HEADERS = [
    "–î–ê–¢–ê_–í–í–û–î–ê", "–ù–û–ú–ï–†_–ó–ê–Ø–í–ö–ò", "–¢–ï–õ–ï–§–û–ù", "–ê–î–†–ï–°", "–î–ê–¢–ê_–î–û–°–¢–ê–í–ö–ò", 
    "–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô", "–ó–ê–ö–ê–ó", "–°–£–ú–ú–ê"
]


# –£–ö–ê–ñ–ò–¢–ï –°–í–û–ô –ù–û–ú–ï–† –ú–ï–ù–ï–î–ñ–ï–†–ê (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ü–µ–ª–µ–π, –Ω–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏)
MANAGER_WHATSAPP_PHONE = "79000000000" 




st.set_page_config(
    page_title="CRM: –í–≤–æ–¥ –ù–æ–≤–æ–π –ó–∞—è–≤–∫–∏", 
    layout="wide",
    initial_sidebar_state="expanded"
)


# –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è st.session_state
if 'critical_error' not in st.session_state:
    st.session_state.critical_error = None
if 'calculator_items' not in st.session_state:
    st.session_state.calculator_items = []
if 'k_client_phone' not in st.session_state:
    st.session_state.k_client_phone = ""
if 'k_order_number' not in st.session_state:
    st.session_state.k_order_number = ""
if 'k_address' not in st.session_state:
    st.session_state.k_address = "" 
if 'k_comment' not in st.session_state:
    st.session_state.k_comment = "" 
    
# –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–∞—Ç—ã - None (—á—Ç–æ–±—ã –ø–æ–ª–µ –±—ã–ª–æ –ø—É—Å—Ç—ã–º)
if 'k_delivery_date' not in st.session_state:
    st.session_state.k_delivery_date = None
    
if 'new_item_qty' not in st.session_state: 
    st.session_state['new_item_qty'] = 1 
    
if 'parsing_log' not in st.session_state:
    st.session_state.parsing_log = ""
    
if 'conversation_text_input' not in st.session_state:
    st.session_state.conversation_text_input = "" 
    
# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
def set_critical_error(message, error_details=None):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    full_message = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {message}"
    if error_details:
        full_message += f"\n\n–î–µ—Ç–∞–ª–∏: {error_details}"
    st.session_state.critical_error = full_message


def clear_form_state():
    """–°–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏."""
    st.session_state.calculator_items = []
    st.session_state.k_client_phone = ""
    st.session_state.k_order_number = ""
    st.session_state.k_delivery_date = None
    st.session_state.k_address = ""
    st.session_state.k_comment = ""
    st.session_state.conversation_text_input = ""


# =========================================================
# 2. –§–£–ù–ö–¶–ò–ò –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø
# =========================================================


@st.cache_resource(ttl=3600)
def get_gsheet_client():
    """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ gspread."""
    if "gcp_service_account" not in st.secrets:
        set_critical_error("–°–µ–∫—Ä–µ—Ç 'gcp_service_account' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ secrets.toml.")
        return None 
    try:
        gc = gspread.service_account_from_dict(st.secrets["gcp_service_account"])
        return gc
    except Exception as e:
        set_critical_error("–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ gspread.", f"–û—à–∏–±–∫–∞: {e}")
        return None


def initialize_worksheet_headers(worksheet: gspread.Worksheet):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ –ª–∏—Å—Ç '–ó–ê–Ø–í–ö–ò'."""
    try:
        current_headers = worksheet.row_values(1)
        
        if current_headers == EXPECTED_HEADERS:
            st.info("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–∏—Å—Ç–∞ '–ó–ê–Ø–í–ö–ò' —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.")
            return


        if current_headers and len(current_headers) > 0 and current_headers != ['']:
             st.warning("‚ö†Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ª–∏—Å—Ç–∞ '–ó–ê–Ø–í–ö–ò' –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã. –ó–∞–ø–∏—Å—ã–≤–∞—é –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.")
             # –û—á–∏—â–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ
             worksheet.update('A1', [EXPECTED_HEADERS])
        else:
             # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞
             worksheet.insert_row(EXPECTED_HEADERS, 1)
             
        st.success("üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–∏—Å—Ç–∞ '–ó–ê–Ø–í–ö–ò' —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞.")


    except Exception as e:
        set_critical_error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –ª–∏—Å—Ç–∞ '–ó–ê–Ø–í–ö–ò'.", f"–û—à–∏–±–∫–∞: {e}")


@st.cache_data(ttl="1h")
def load_price_list():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∏–∑ Google Sheets."""
    gc = get_gsheet_client()
    if not gc: return pd.DataFrame() 
        
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        worksheet = sh.worksheet(WORKSHEET_NAME_PRICE) 
        data = worksheet.get_all_records()
        df = pd.DataFrame(data)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
        if '–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï' not in df.columns or '–¶–ï–ù–ê' not in df.columns:
            set_critical_error(
                f"–í –ª–∏—Å—Ç–µ '{WORKSHEET_NAME_PRICE}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã '–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï' –∏–ª–∏ '–¶–ï–ù–ê'."
            )
            return pd.DataFrame()
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã –≤ —á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç
        df['–¶–ï–ù–ê'] = pd.to_numeric(df['–¶–ï–ù–ê'], errors='coerce') 
        st.info(f"‚úÖ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ. –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(df)} –ø–æ–∑–∏—Ü–∏–π.")
        return df
    except gspread.exceptions.SpreadsheetNotFound:
        set_critical_error(f"Google –¢–∞–±–ª–∏—Ü–∞ '{SPREADSHEET_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except gspread.exceptions.WorksheetNotFound:
        set_critical_error(f"–õ–∏—Å—Ç '{WORKSHEET_NAME_PRICE}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        set_critical_error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∞–π—Å–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏).", f"–û—à–∏–±–∫–∞: {e}")
    return pd.DataFrame()


@st.cache_resource
def get_orders_worksheet():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞—è–≤–æ–∫."""
    gc = get_gsheet_client()
    if not gc: return None
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        worksheet = sh.worksheet(WORKSHEET_NAME_ORDERS)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –¥–æ—Å—Ç—É–ø–µ
        initialize_worksheet_headers(worksheet)
        
        return worksheet
    except gspread.exceptions.WorksheetNotFound:
        set_critical_error(f"–õ–∏—Å—Ç –¥–ª—è –∑–∞—è–≤–æ–∫ '{WORKSHEET_NAME_ORDERS}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None
    except Exception as e:
        set_critical_error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '{WORKSHEET_NAME_ORDERS}'.", f"–û—à–∏–±–∫–∞: {e}")
        return None


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
price_df = load_price_list() 
orders_ws = get_orders_worksheet()
price_items = ["--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---"] + price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'].tolist() if not price_df.empty else ["--- –ü—Ä–∞–π—Å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω ---"]


if 'new_item_select' not in st.session_state:
    st.session_state['new_item_select'] = price_items[0]


# =========================================================
# 3. –§–£–ù–ö–¶–ò–ò –õ–û–ì–ò–ö–ò (–ü–ê–†–°–ò–ù–ì –ò –ó–ê–ü–ò–°–¨)
# =========================================================


def parse_conversation(text: str):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ st.session_state."""
    
    # –°–±—Ä–æ—Å –ª–æ–≥–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    st.session_state.parsing_log = f"--- –õ–û–ì –ü–ê–†–°–ò–ù–ì–ê ({datetime.now().strftime('%H:%M:%S')}) ---\n"
    
    # 1. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–æ—Ç–µ)
    # –ò—â–µ–º 10-–∑–Ω–∞—á–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Ü–∏—Ñ—Ä (–±–µ–∑ —É—á–µ—Ç–∞ —Å–∫–æ–±–æ–∫/–ø—Ä–æ–±–µ–ª–æ–≤)
    phone_matches = re.findall(r'(?:\+7|8|\b7)?\s*\(?\s*(\d{3})\s*\)?\s*(\d{3})[-\s]*(\d{2})[-\s]*(\d{2})', text)
    
    st.session_state.parsing_log += f"–ü–æ–∏—Å–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã): {phone_matches}\n"
    
    if phone_matches:
        phone_counts = {}
        for match in phone_matches:
            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç 7–•–•–•–•–•–•–•–•–•–•
            normalized_phone = "7" + "".join(match)
            phone_counts[normalized_phone] = phone_counts.get(normalized_phone, 0) + 1
        
        # –í—ã–±–æ—Ä —Å–∞–º–æ–≥–æ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–µ–≥–æ—Å—è –Ω–æ–º–µ—Ä–∞
        phone = max(phone_counts.items(), key=lambda item: item[1])[0]
        st.session_state['k_client_phone'] = phone 
        st.info(f"‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞–π–¥–µ–Ω: **{phone}**")
        st.session_state.parsing_log += f"–û–ø—Ä–µ–¥–µ–ª–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
    else:
        st.warning("‚ö†Ô∏è –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.")
        st.session_state.parsing_log += f"–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω.\n"


    # 2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏/—Å—á–µ—Ç–∞
    order_match = re.search(r'(?:–∑–∞—è–≤–∫[–∞–∏]|–∑–∞–∫–∞–∑|—Å—á–µ—Ç|‚Ññ)\s*(\d+)', text, re.IGNORECASE)
    
    st.session_state.parsing_log += f"–ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏ (–º–∞—Ç—á): {order_match.group(1) if order_match else 'None'}\n"


    if order_match:
        st.session_state['k_order_number'] = order_match.group(1)
        st.info(f"‚úÖ –ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏ –Ω–∞–π–¥–µ–Ω: {order_match.group(1)}")
    else:
        st.warning("‚ö†Ô∏è –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.")
        st.session_state.k_order_number = ""


    # 3. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    delivery_date = None
    
    relative_match = ""
    today = datetime.today().date()
    
    # –ü–†–û–í–ï–†–ö–ê –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–´–• –î–ê–¢
    if re.search(r'–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', text, re.IGNORECASE):
        delivery_date = today + timedelta(days=2)
        relative_match = "–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ (+2 –¥–Ω—è)"
    elif re.search(r'–∑–∞–≤—Ç—Ä–∞', text, re.IGNORECASE):
        delivery_date = today + timedelta(days=1)
        relative_match = "–∑–∞–≤—Ç—Ä–∞ (+1 –¥–µ–Ω—å)"
    
    st.session_state.parsing_log += f"–ü–æ–∏—Å–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–π –¥–∞—Ç—ã: {relative_match or '–ù–µ—Ç'}\n"


    # –ü–†–û–í–ï–†–ö–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –î–ê–¢ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –¥–∞—Ç–∞ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)
    if not delivery_date:
        # –ò—â–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–¥.–º–º.–≥–≥–≥–≥, –¥–¥/–º–º/–≥–≥–≥–≥, –¥–¥.–º–º, –¥–¥/–º–º
        date_match = re.search(r'(\d{1,2})[./](\d{1,2})(?:[./](\d{2,4}))?', text)
        
        st.session_state.parsing_log += f"–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–∞—Ç—ã (–º–∞—Ç—á): {date_match.groups() if date_match else 'None'}\n"
        
        if date_match:
            day, month, year_str = date_match.groups()
            current_year = today.year
            
            try:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≥–æ–¥–∞ (XX)
                if year_str:
                    if len(year_str) == 2:
                        year = 2000 + int(year_str)
                    else:
                        year = int(year_str)
                else:
                    year = current_year
                    
                delivery_date = datetime(year, int(month), int(day)).date()
            except ValueError:
                st.session_state.parsing_log += f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã: {day}.{month}.{year_str or current_year}\n"
                pass
    
    if delivery_date:
        # –õ–û–ì–ò–ö–ê –ö–û–†–†–ï–ö–¶–ò–ò: –ü–µ—Ä–µ–Ω–æ—Å –¥–∞—Ç—ã –≤ –±—É–¥—É—â–µ–µ, –µ—Å–ª–∏ –æ–Ω–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –≤ –ø—Ä–æ—à–ª–æ–º
        initial_date_str = delivery_date.strftime('%d.%m.%Y')
        year_corrected = False
        
        while delivery_date < today and delivery_date.year < today.year + 1:
            delivery_date = delivery_date.replace(year=delivery_date.year + 1)
            year_corrected = True


        if year_corrected:
            st.warning(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ ({initial_date_str}) –±—ã–ª–∞ –≤ –ø—Ä–æ—à–ª–æ–º. –ì–æ–¥ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ **{delivery_date.year}**.")
            st.session_state.parsing_log += f"–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –≥–æ–¥–∞: –ò—Å—Ö–æ–¥–Ω–∞—è {initial_date_str}, –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {delivery_date.year}\n"
            
        st.session_state['k_delivery_date'] = delivery_date
        st.info(f"‚úÖ –î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞–π–¥–µ–Ω–∞: **{delivery_date.strftime('%d.%m.%Y')}**")
    else:
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞ "–∑–∞–≤—Ç—Ä–∞"
        tomorrow = today + timedelta(days=1)
        st.session_state['k_delivery_date'] = tomorrow
        st.warning("‚ö†Ô∏è –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ '–∑–∞–≤—Ç—Ä–∞'.")
        st.session_state.parsing_log += f"–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {tomorrow.strftime('%d.%m.%Y')}\n"


    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    st.rerun() 


def save_data_to_gsheets(data_row: List[Any]) -> bool:
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç –ó–ê–Ø–í–ö–ò."""
    if orders_ws is None:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–∏—Å—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö.")
        return False
    try:
        orders_ws.append_row(data_row)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        return False


# =========================================================
# 4. –§–£–ù–ö–¶–ò–ò –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê –ò –ò–ù–¢–ï–†–§–ï–ô–°–ê
# =========================================================


def add_item():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ –≤ session_state."""
    selected_name = st.session_state['new_item_select']
    quantity = st.session_state['new_item_qty']
    
    if selected_name != "--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---" and quantity > 0:
        price_row = price_df[price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'] == selected_name]
        
        if price_row.empty:
             st.error(f"–û—à–∏–±–∫–∞: –ø–æ–∑–∏—Ü–∏—è '{selected_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–µ.")
             return


        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É
        price = price_row.iloc[0]['–¶–ï–ù–ê']
        
        st.session_state.calculator_items.append({
            '–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï': selected_name,
            '–ö–û–õ–ò–ß–ï–°–¢–í–û': quantity,
            '–¶–ï–ù–ê_–ó–ê_–ï–î': price,
            '–°–£–ú–ú–ê': price * quantity
        })


        # –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏ –≤—ã–±–æ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏
        st.session_state['new_item_qty'] = 1
        st.session_state['new_item_select'] = price_items[0] 


def remove_item(index: int):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–∑–∏—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É."""
    if 0 <= index < len(st.session_state.calculator_items):
        st.session_state.calculator_items.pop(index)
    st.rerun()


def generate_whatsapp_url(target_phone: str, order_data: Dict[str, str], total_sum: float) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ WhatsApp —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º."""
    
    text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏—Ö:\n"
    text += f"üÜî –ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏: {order_data['–ù–û–ú–ï–†_–ó–ê–Ø–í–ö–ò']}\n"
    text += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order_data['–¢–ï–õ–ï–§–û–ù']}\n"
    text += f"üìç –ê–¥—Ä–µ—Å: {order_data['–ê–î–†–ï–°']}\n"
    text += f"üóìÔ∏è –î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏: {order_data['–î–ê–¢–ê_–î–û–°–¢–ê–í–ö–ò']}\n"
    
    # –£—Å–ª–æ–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    if order_data.get('–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô'):
        text += f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order_data['–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô']}\n"
        
    text += f"\nüõí –°–æ—Å—Ç–∞–≤ –ó–∞–∫–∞–∑–∞:\n{order_data['–ó–ê–ö–ê–ó']}\n"
    text += f"üí∞ *–ò–¢–û–ì–û: {total_sum:,.2f} –†–£–ë.*\n"
    
    # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è URL
    encoded_text = urllib.parse.quote(text)
    
    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è wa.me (–¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +)
    if not target_phone.startswith('+'):
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 7–•–•–•–•–•–•–•–•–•–•
        target_phone = '+' + target_phone
        
    return f"https://wa.me/{target_phone}?text={encoded_text}"




# =========================================================
# 5. –û–°–ù–û–í–ù–û–ô –ò–ù–¢–ï–†–§–ï–ô–° STREAMLIT
# =========================================================


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
if st.session_state.critical_error:
    st.error(st.session_state.critical_error)
    st.stop() 


st.title("–í–≤–æ–¥ –ù–æ–≤–æ–π –ó–∞—è–≤–∫–∏ CRM üìù")


# ----------------------------------------------------------------------------------------------------------------------
## –ë–ª–æ–∫ –ü–∞—Ä—Å–∏–Ω–≥–∞ –ü–µ—Ä–µ–ø–∏—Å–∫–∏
# ----------------------------------------------------------------------------------------------------------------------


with st.expander("ü§ñ –ë–ª–æ–∫ –ü–∞—Ä—Å–∏–Ω–≥–∞ –ü–µ—Ä–µ–ø–∏—Å–∫–∏", expanded=False):
    st.subheader("–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏")
    
    conversation_text = st.text_area(
        "–í—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –∫–ª–∏–µ–Ω—Ç–æ–º —Å—é–¥–∞:",
        key='conversation_text_input',
        height=150
    )
    
    if st.button("üîç –ó–∞–ø—É—Å—Ç–∏—Ç—å –ü–∞—Ä—Å–∏–Ω–≥ –î–∞–Ω–Ω—ã—Ö", use_container_width=True):
        if conversation_text:
            parse_conversation(conversation_text)


    if st.session_state.parsing_log:
        st.caption("–õ–æ–≥ –ü–∞—Ä—Å–∏–Ω–≥–∞:")
        st.code(st.session_state.parsing_log, language='text')


st.markdown("---")


# ----------------------------------------------------------------------------------------------------------------------
## –§–æ—Ä–º–∞ –í–≤–æ–¥–∞ –û—Å–Ω–æ–≤–Ω—ã—Ö –î–∞–Ω–Ω—ã—Ö
# ----------------------------------------------------------------------------------------------------------------------


st.subheader("–û—Å–Ω–æ–≤–Ω—ã–µ –î–∞–Ω–Ω—ã–µ –ó–∞—è–≤–∫–∏")


col1, col2 = st.columns(2)


with col1:
    st.text_input(
        "–ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏ / –°—á—ë—Ç–∞", 
        key='k_order_number', 
        value=st.session_state.k_order_number
    )
    
    st.text_input(
        "–¢–µ–ª–µ—Ñ–æ–Ω –ö–ª–∏–µ–Ω—Ç–∞ (—Å 7)", 
        key='k_client_phone', 
        value=st.session_state.k_client_phone
    )


with col2:
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –ª–∏–±–æ –∏–∑ session_state, –ª–∏–±–æ –∑–∞–≤—Ç—Ä–∞—à–Ω—é—é
    default_date = st.session_state.k_delivery_date if st.session_state.k_delivery_date else datetime.today().date() + timedelta(days=1)
    
    st.date_input(
        "–î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏",
        key='k_delivery_date',
        value=default_date,
        min_value=datetime.today().date()
    )
    
    st.text_input("–ê–¥—Ä–µ—Å –î–æ—Å—Ç–∞–≤–∫–∏", key='k_address', value=st.session_state.k_address)
    
st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π / –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ", key='k_comment', height=50, value=st.session_state.k_comment)


st.markdown("---")


# ----------------------------------------------------------------------------------------------------------------------
## –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ó–∞–∫–∞–∑–∞
# ----------------------------------------------------------------------------------------------------------------------


st.subheader("–°–æ—Å—Ç–∞–≤ –ó–∞–∫–∞–∑–∞ (–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä)")


# --- –ë–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ ---
col_item, col_qty, col_add = st.columns([4, 1, 1])


with col_item:
    st.selectbox(
        "–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–∏", 
        price_items, 
        key='new_item_select',
        disabled=price_df.empty
    )


with col_qty:
    st.number_input(
        "–ö–æ–ª-–≤–æ", 
        min_value=1, 
        step=1,
        key='new_item_qty' 
    )


with col_add:
    st.markdown(" ")
    st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å", on_click=add_item, use_container_width=True, disabled=price_df.empty)


# --- –ë–ª–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ---
total_sum = 0
if st.session_state.calculator_items:
    
    df_items = pd.DataFrame(st.session_state.calculator_items)
    total_sum = df_items['–°–£–ú–ú–ê'].sum()
    
    # Display table of items
    st.dataframe(
        df_items[['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï', '–ö–û–õ–ò–ß–ï–°–¢–í–û', '–¶–ï–ù–ê_–ó–ê_–ï–î', '–°–£–ú–ú–ê']],
        column_config={
            '–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï': '–¢–æ–≤–∞—Ä',
            '–ö–û–õ–ò–ß–ï–°–¢–í–û': '–ö–æ–ª-–≤–æ',
            '–¶–ï–ù–ê_–ó–ê_–ï–î': st.column_config.NumberColumn("–¶–µ–Ω–∞ –∑–∞ –µ–¥.", format="%.2f –†–£–ë."),
            '–°–£–ú–ú–ê': st.column_config.NumberColumn("–°—É–º–º–∞", format="%.2f –†–£–ë."),
        },
        hide_index=True,
        use_container_width=True
    )
    
    # Display delete buttons
    st.markdown("##### –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π:")
    for i, item in enumerate(st.session_state.calculator_items):
         col_name, col_sum, col_del = st.columns([5, 1.5, 0.5])
         with col_name:
             st.write(f"**{item['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï']}** ({item['–ö–û–õ–ò–ß–ï–°–¢–í–û']} —à—Ç.)")
         with col_sum:
             st.write(f"**{item['–°–£–ú–ú–ê']:,.2f} –†–£–ë.**")
         with col_del:
             st.button("‚ùå", key=f"del_{i}", on_click=remove_item, args=(i,))


    st.markdown(f"### üí∞ **–ò–¢–û–ì–û: {total_sum:,.2f} –†–£–ë.**")
    
else:
    st.info("–í –∑–∞–∫–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä.")


st.markdown("---")


# ----------------------------------------------------------------------------------------------------------------------
## –ë–ª–æ–∫ –û—Ç–ø—Ä–∞–≤–∫–∏ –∏ –°—Å—ã–ª–æ–∫
# ----------------------------------------------------------------------------------------------------------------------


st.subheader("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ó–∞—è–≤–∫–∏")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
is_ready_to_send = (
    st.session_state.k_order_number and 
    st.session_state.k_client_phone and 
    st.session_state.k_address and 
    st.session_state.calculator_items
)


# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–æ—Ç–ø—Ä–∞–≤–∫–∏
order_details = "\n".join(
    [f"{item['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï']} - {item['–ö–û–õ–ò–ß–ï–°–¢–í–û']} —à—Ç. (–ø–æ {item['–¶–ï–ù–ê_–ó–ê_–ï–î']:,.2f} –†–£–ë.)" 
     for item in st.session_state.calculator_items]
)


# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –ø–æ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
if not is_ready_to_send:
    missing_fields = []
    if not st.session_state.k_order_number: missing_fields.append("–ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏")
    if not st.session_state.k_client_phone: missing_fields.append("–¢–µ–ª–µ—Ñ–æ–Ω –ö–ª–∏–µ–Ω—Ç–∞")
    if not st.session_state.k_address: missing_fields.append("–ê–¥—Ä–µ—Å –î–æ—Å—Ç–∞–≤–∫–∏")
    if not st.session_state.calculator_items: missing_fields.append("–°–æ—Å—Ç–∞–≤ –ó–∞–∫–∞–∑–∞")
    
    st.error(f"‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å: {', '.join(missing_fields)}")




# 1. –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ CRM"
if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ó–∞—è–≤–∫—É –≤ Google Sheets", disabled=not is_ready_to_send, type="primary", use_container_width=True):
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Google Sheets
    data_to_save = [
        datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        st.session_state.k_order_number,
        st.session_state.k_client_phone,
        st.session_state.k_address,
        st.session_state.k_delivery_date.strftime('%Y-%m-%d') if st.session_state.k_delivery_date else "",
        st.session_state.k_comment,
        order_details,
        total_sum
    ]
    
    if save_data_to_gsheets(data_to_save):
        st.success(f"üéâ –ó–∞—è–≤–∫–∞ ‚Ññ{st.session_state.k_order_number} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
        clear_form_state()
        time.sleep(0.5)
        st.rerun() 
    else:
        st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.")


# 2. –ë–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ WhatsApp
if is_ready_to_send:
    
    whatsapp_data = {
        '–ù–û–ú–ï–†_–ó–ê–Ø–í–ö–ò': st.session_state.k_order_number,
        '–¢–ï–õ–ï–§–û–ù': st.session_state.k_client_phone,
        '–ê–î–†–ï–°': st.session_state.k_address,
        '–î–ê–¢–ê_–î–û–°–¢–ê–í–ö–ò': st.session_state.k_delivery_date.strftime('%d.%m.%Y'),
        '–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô': st.session_state.k_comment,
        '–ó–ê–ö–ê–ó': order_details
    }
    
    whatsapp_url = generate_whatsapp_url(st.session_state.k_client_phone, whatsapp_data, total_sum)
    
    st.markdown("---")
    st.markdown(f"**–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É ({st.session_state.k_client_phone}):**")
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–∫–∏
    st.markdown(
        f'<a href="{whatsapp_url}" target="_blank">'
        f'<button style="background-color:#25D366;color:white;padding:10px 20px;border:none;border-radius:5px;cursor:pointer;width:100%;">'
        f'üí¨ –û—Ç–∫—Ä—ã—Ç—å WhatsApp —Å –ó–∞–∫–∞–∑–æ–º'
        f'</button></a>',
        unsafe_allow_html=True
    )
    st.caption("–ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")