import streamlit as st
import gspread
import pandas as pd
import json
from datetime import datetime
import time
import urllib.parse 


# =========================================================
# 1. –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ù–ê–°–¢–†–û–ô–ö–ò
# =========================================================


# --- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ò–°–ü–†–ê–í–ò–¢–¨! ---
SPREADSHEET_NAME = "Start" 
WORKSHEET_NAME_ORDERS = "–ó–ê–Ø–í–ö–ò"


# ‚ùó –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê (WhatsApp) –í–ê–®–ï–ì–û –ú–ï–ù–ï–î–ñ–ï–†–ê/–û–¢–î–ï–õ–Ø, –ö–£–î–ê –ë–£–î–ï–¢ –û–¢–ü–†–ê–í–õ–Ø–¢–¨–°–Ø –°–°–´–õ–ö–ê
MANAGER_WHATSAPP_PHONE = "79000000000" 
# ------------------------------


st.set_page_config(
    page_title="CRM: –í–≤–æ–¥ –ù–æ–≤–æ–π –ó–∞—è–≤–∫–∏", 
    layout="wide",
    initial_sidebar_state="expanded"
)


# =========================================================
# 2. –§–£–ù–ö–¶–ò–ò –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø
# =========================================================


@st.cache_resource(ttl=3600)
def get_gsheet_client():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Google Sheets API —á–µ—Ä–µ–∑ –°–µ—Ä–≤–∏—Å–Ω—ã–π –ê–∫–∫–∞—É–Ω—Ç (–∏—Å–ø–æ–ª—å–∑—É—è st.secrets)."""
    
    if "gcp_service_account" not in st.secrets:
        st.error("–û—à–∏–±–∫–∞: –°–µ–∫—Ä–µ—Ç 'gcp_service_account' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Streamlit Secrets.")
        st.stop() 
        
    try:
        gc = gspread.service_account_from_dict(st.secrets["gcp_service_account"])
        return gc
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ gspread. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ä–µ—Ç–∞ 'gcp_service_account'. –û—à–∏–±–∫–∞: {e}")
        st.stop()
        return None


@st.cache_data(ttl="1h")
def load_price_list():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ª–∏—Å—Ç '–ü–†–ê–ô–°' –≤ DataFrame pandas."""
    gc = get_gsheet_client()
    if not gc: return pd.DataFrame() 
        
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        worksheet = sh.worksheet("–ü–†–ê–ô–°") 
        data = worksheet.get_all_records()
        df = pd.DataFrame(data)
        
        if '–¶–ï–ù–ê' in df.columns:
            df['–¶–ï–ù–ê'] = pd.to_numeric(df['–¶–ï–ù–ê'], errors='coerce')
        
        return df
    
    except gspread.exceptions.SpreadsheetNotFound:
        st.error(f"–û—à–∏–±–∫–∞: Google –¢–∞–±–ª–∏—Ü–∞ —Å –∏–º–µ–Ω–µ–º '{SPREADSHEET_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
        st.stop()
    except gspread.exceptions.WorksheetNotFound:
        st.error("–û—à–∏–±–∫–∞: –õ–∏—Å—Ç '–ü–†–ê–ô–°' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è.")
        st.stop()
    except Exception as e:
        st.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∞–π—Å–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï –∏ –¶–ï–ù–ê). –û—à–∏–±–∫–∞: {e}")
        st.stop()
        
    return pd.DataFrame()


@st.cache_resource
def get_orders_worksheet():
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ª–∏—Å—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–æ–∫."""
    gc = get_gsheet_client()
    if not gc: return None
    try:
        sh = gc.open(SPREADSHEET_NAME) 
        return sh.worksheet(WORKSHEET_NAME_ORDERS)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '{WORKSHEET_NAME_ORDERS}'. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞! –û—à–∏–±–∫–∞: {e}")
        st.stop()
        return None


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
price_df = load_price_list() 
orders_ws = get_orders_worksheet()


if price_df.empty: 
    price_items = ["--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---"]
else:
    price_items = ["--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---"] + price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'].tolist()


if 'calculator_items' not in st.session_state:
    st.session_state.calculator_items = []
    
# =========================================================
# 3. –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–ò–°–ò –î–ê–ù–ù–´–• –í GOOGLE SHEETS
# =========================================================


def save_data_to_gsheets(data_row):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç –ó–ê–Ø–í–ö–ò."""
    if orders_ws is None:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–∏—Å—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö.")
        return False
        
    try:
        orders_ws.append_row(data_row)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
        return False


# =========================================================
# 4. –ë–õ–û–ö 1: –û–°–ù–û–í–ù–´–ï –î–ê–ù–ù–´–ï (–í–í–ï–†–•–£)
# =========================================================


st.title("–°–∏—Å—Ç–µ–º–∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ó–∞—è–≤–∫–∞–º–∏")
st.markdown("---")


# --- –§–û–†–ú–ê 1: –°–±–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ ---
with st.form(key='data_form_main'):


    st.header("1. –û—Å–Ω–æ–≤–Ω—ã–µ –î–∞–Ω–Ω—ã–µ")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # –ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏
        st.text_input("–ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏", key="k_order_number", 
                      value=st.session_state.get("k_order_number", ""))
        
        # –¢–µ–ª–µ—Ñ–æ–Ω
        st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞ (–¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è)", key="k_client_phone",
                      value=st.session_state.get("k_client_phone", ""))
        
        # –ò—Å—Ç–æ—á–Ω–∏–∫ –ó–∞—è–≤–∫–∏
        source_options = ["–°–∞–π—Ç", "–ó–≤–æ–Ω–æ–∫", "–ü–∞—Ä—Ç–Ω–µ—Ä", "–ü—Ä–æ—á–µ–µ"]
        source_index = source_options.index(st.session_state.get("k_source", source_options[0]))
        st.selectbox("–ò—Å—Ç–æ—á–Ω–∏–∫ –ó–∞—è–≤–∫–∏", source_options, index=source_index, key="k_source")




    with col2:
        # –°—Ç–∞—Ç—É—Å –ó–∞—è–≤–∫–∏
        status_options = ["–ù–æ–≤–∞—è", "–í —Ä–∞–±–æ—Ç–µ", "–ó–∞–∫—Ä—ã—Ç–∞", "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ (–ö–ª–∏–µ–Ω—Ç)"] 
        status_index = status_options.index(st.session_state.get("k_status", status_options[0]))
        st.selectbox("–°—Ç–∞—Ç—É—Å –ó–∞—è–≤–∫–∏", status_options, index=status_index, key="k_status")
        
        # –î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏—è
        if 'k_date_created' not in st.session_state:
            st.session_state.k_date_created = datetime.today().date()
            
        st.date_input("–î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏—è –ó–∞—è–≤–∫–∏", 
                      value=st.session_state.k_date_created,
                      key="k_date_created")
                      
        # ‚ùó –ù–û–í–û–ï –ü–û–õ–ï: –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
        if 'k_date_delivery' not in st.session_state:
             st.session_state.k_date_delivery = datetime.today().date()
        st.date_input("‚ùó –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏", 
                      value=st.session_state.k_date_delivery,
                      key="k_date_delivery")
                                     
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        st.slider("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", 1, 5, st.session_state.get("k_priority", 3), key="k_priority")


    # –§–æ—Ä–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç–∞ –∑–¥–µ—Å—å
    st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–û–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º—É)", type="primary")


# –ö–û–ù–ï–¶ –§–û–†–ú–´ 1


# =========================================================
# 5. –ë–õ–û–ö 2: –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –°–¢–û–ò–ú–û–°–¢–ò –ó–ê–Ø–í–ö–ò
# =========================================================
st.markdown("---")
st.header("2. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –°—Ç–æ–∏–º–æ—Å—Ç–∏ –ó–∞—è–≤–∫–∏") 


add_item = st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –≤ —Ä–∞—Å—á–µ—Ç")
if add_item:
    st.session_state.calculator_items.append({"item": price_items[0], "qty": 1})
    st.rerun()


total_cost = 0


for i, item_data in enumerate(st.session_state.calculator_items):
    
    col_item, col_qty, col_price, col_remove = st.columns([4, 1, 1, 0.5])


    with col_item:
        index = price_items.index(item_data["item"]) if item_data["item"] in price_items else 0
        selected_item = st.selectbox(
            f"–ü–æ–∑–∏—Ü–∏—è {i}", 
            price_items, 
            index=index,
            key=f"item_{i}",
            label_visibility="collapsed"
        )
        st.session_state.calculator_items[i]["item"] = selected_item


    with col_qty:
        quantity = st.number_input(
            f"–ö–æ–ª-–≤–æ {i}", 
            min_value=1, 
            value=item_data["qty"], 
            step=1,
            key=f"qty_{i}",
            label_visibility="collapsed"
        )
        st.session_state.calculator_items[i]["qty"] = int(quantity)
        
    cost = 0
    if selected_item != price_items[0] and not price_df.empty:
        price_row = price_df[price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'] == selected_item]
        if not price_row.empty and '–¶–ï–ù–ê' in price_row.columns:
            try:
                price = price_row['–¶–ï–ù–ê'].iloc[0]
                cost = float(price) * int(quantity)
                total_cost += cost
            except ValueError:
                 st.warning(f"–û—à–∏–±–∫–∞: –¶–µ–Ω–∞ –¥–ª—è '{selected_item}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º.")
                 cost = 0
    
    with col_price:
        st.metric(f"–°—Ç–æ–∏–º–æ—Å—Ç—å {i}", f"{cost:,.0f} ‚ÇΩ", label_visibility="collapsed")
        
    with col_remove:
        st.text("") 
        if st.button("üóëÔ∏è", key=f"remove_{i}"):
            st.session_state.calculator_items.pop(i)
            st.rerun() 


st.markdown("---")
st.subheader(f"–ò–¢–û–ì–û: {total_cost:,.0f} ‚ÇΩ") 


# =========================================================
# 6. –ë–õ–û–ö 3: –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –ò –ö–ù–û–ü–ö–ê –û–¢–ü–†–ê–í–ö–ò
# =========================================================


st.header("3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")


comment = st.text_area(
    "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞—è–≤–∫–µ (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–µ –ø–æ–ª–µ)",
    key="k_comment",
    value=st.session_state.get("k_comment", ""),
    height=200 
)


st.markdown("---")


# =========================================================
# 7. –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –°–û–ì–õ–ê–°–û–í–ê–ù–ò–ï –ß–ï–†–ï–ó WHATSAPP (–û–ë–ù–û–í–õ–ï–ù–û!)
# =========================================================


def generate_whatsapp_message(total_cost):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è WhatsApp, —Å–æ–±–∏—Ä–∞—è –¥–∞–Ω–Ω—ã–µ –∏–∑ session_state."""
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
    date_created_str = st.session_state.k_date_created.strftime("%Y-%m-%d")
    date_delivery_str = st.session_state.k_date_delivery.strftime("%Y-%m-%d")
    
    # 1. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    items_list = []
    for item in st.session_state.calculator_items:
        if item["item"] != "--- –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é ---":
            price_row = price_df[price_df['–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï'] == item["item"]]
            # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
            price = price_row['–¶–ï–ù–ê'].iloc[0] if not price_row.empty and '–¶–ï–ù–ê' in price_row.columns else 0
            
            cost_item = float(price) * item["qty"]
            items_list.append(f"- {item['item']} ({item['qty']} —à—Ç.) - {cost_item:,.0f} ‚ÇΩ")
    
    items_text = "\n".join(items_list) if items_list else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    
    # 2. –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message = f"""
*–ó–ê–Ø–í–ö–ê –ù–ê –°–û–ì–õ–ê–°–û–í–ê–ù–ò–ï*
_________________________________________


*–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∑–∞—è–≤–∫–∏:*
–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {st.session_state.get('k_order_number', '–ë–ï–ó –ù–û–ú–ï–†–ê')}
–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞: {st.session_state.get('k_client_phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date_created_str}
–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {date_delivery_str}
–ò—Å—Ç–æ—á–Ω–∏–∫: {st.session_state.get('k_source', '–ù–µ —É–∫–∞–∑–∞–Ω')}
–°—Ç–∞—Ç—É—Å: {st.session_state.get('k_status', '–ù–æ–≤–∞—è')}
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {st.session_state.get('k_priority', 3)}


*–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*
{items_text}


*–ò–¢–û–ì–û –∫ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é:* {total_cost:,.0f} ‚ÇΩ
_________________________________________


*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞:*
{st.session_state.get('k_comment', '–ù–µ—Ç')}


–ü—Ä–æ—à—É –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –≤–µ—Ä–Ω—ã.
"""
    return message.strip()


# --- –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ---
col_wa, col_save = st.columns([1, 1])


with col_wa:
    if st.button("üí¨ –°–û–ì–õ–ê–°–û–í–ê–¢–¨ –∑–∞—è–≤–∫—É —Å –∫–ª–∏–µ–Ω—Ç–æ–º (WhatsApp)", type="secondary", use_container_width=True):
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è WhatsApp
        if not st.session_state.get('k_client_phone'):
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ '–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞' –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ WhatsApp.")
        else:
            message_text = generate_whatsapp_message(total_cost)
            
            # –ö–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è URL
            encoded_message = urllib.parse.quote(message_text)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É
            wa_link = f"https://wa.me/{st.session_state.k_client_phone}?text={encoded_message}"
            
            # ‚ùó –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å
            st.markdown(
                f'<a href="{wa_link}" target="_blank" style="display: block; width: 100%; padding: 10px; background-color: #25D366; color: white; text-align: center; text-decoration: none; border-radius: 5px; font-weight: bold;">'
                f'‚úÖ –ù–ê–ñ–ú–ò–¢–ï –î–õ–Ø –ü–ï–†–ï–•–û–î–ê –í WHATSAPP (–ö–õ–ò–ï–ù–¢: {st.session_state.k_client_phone})</a>', 
                unsafe_allow_html=True
            )
            st.info("–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")




# --- –§–û–†–ú–ê 2: –ö–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ---
with col_save:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Form Submit Button –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    with st.form(key='submit_form'):
        submitted_save = st.form_submit_button(
            "üíæ –°–û–•–†–ê–ù–ò–¢–¨ –ó–ê–Ø–í–ö–£ –í –¢–ê–ë–õ–ò–¶–£", 
            type="primary",
            use_container_width=True
        )


if 'submitted_save' in locals() and submitted_save:
        
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if not st.session_state.get('k_order_number') and not st.session_state.get('k_client_phone'):
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ '–ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏' –ò–õ–ò '–¢–µ–ª–µ—Ñ–æ–Ω'.")
    else:
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        date_to_save = st.session_state.k_date_created.strftime("%Y-%m-%d") if hasattr(st.session_state.k_date_created, 'strftime') else str(st.session_state.k_date_created)
        date_delivery_to_save = st.session_state.k_date_delivery.strftime("%Y-%m-%d") if hasattr(st.session_state.k_date_delivery, 'strftime') else str(st.session_state.k_date_delivery)


        # ‚ùó –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –°–ü–ò–°–û–ö –î–ê–ù–ù–´–• –î–õ–Ø GOOGLE SHEETS
        all_data = [
            datetime.now().strftime("%Y-%m-%d %H:%M:%S"), # 1. –î–∞—Ç–∞/–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏
            st.session_state.get('k_order_number', ''),   # 2. –ù–æ–º–µ—Ä –ó–∞—è–≤–∫–∏
            st.session_state.get('k_client_phone', ''),   # 3. –¢–µ–ª–µ—Ñ–æ–Ω
            date_to_save,                                 # 4. –î–∞—Ç–∞ –°–æ–∑–¥–∞–Ω–∏—è
            date_delivery_to_save,                        # 5. –ù–û–í–ê–Ø –î–ê–¢–ê –î–û–°–¢–ê–í–ö–ò
            st.session_state.k_source,                    # 6. –ò—Å—Ç–æ—á–Ω–∏–∫
            st.session_state.k_status,                    # 7. –°—Ç–∞—Ç—É—Å
            st.session_state.k_priority,                  # 8. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            total_cost,                                   # 9. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
            st.session_state.get('k_comment', '')         # 10. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        ]
        
        # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        if save_data_to_gsheets(all_data):
            st.success("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Google –¢–∞–±–ª–∏—Ü–µ!")
            
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            for key in list(st.session_state.keys()):
                if key.startswith('k_'):
                    del st.session_state[key]
                    
            st.session_state.calculator_items = []
            time.sleep(1) 
            st.rerun() 
        else:
            st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—Å—Ç—É '–ó–ê–Ø–í–ö–ò'.")